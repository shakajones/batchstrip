FROM elixir:1.12-alpine AS build
ENV MIX_ENV=prod
ENV NODE_ENV=production

# install build dependencies
RUN apk add --update git vim bash

# prepare build dir
RUN mkdir /app
WORKDIR /app

# install hex + rebar
RUN mix do local.hex --force, local.rebar --force

# install mix dependencies
COPY config/ ./config/
COPY mix.exs mix.lock ./
RUN mix deps.get
RUN mix deps.compile

FROM node:14-alpine AS node

RUN mkdir -p /app/assets
COPY --from=build /app/deps /app/deps
WORKDIR /app/assets

COPY assets/ ./
RUN rm -rf ./node_modules

RUN npm ci --progress=false --no-audit --loglevel=error
RUN ./node_modules/webpack/bin/webpack.js --mode="production"

FROM build AS release
COPY . .

COPY --from=node --chown=nobody:nobody /app/priv/static/ ./priv/static
COPY --from=node --chown=nobody:nobody /app/assets/ ./assets

RUN mix phx.digest
RUN mix release

RUN mix test

# prepare release image
FROM alpine:3.14 AS app

RUN apk add --update --no-cache libstdc++ libgcc openssl ncurses-libs

RUN mkdir /app && chown -R nobody:nobody /app
WORKDIR /app
COPY --from=release --chown=nobody:nobody /app/_build/prod/rel/batchstrip ./
USER nobody:nobody


# copy only the release build from the other image
CMD ["bin/batchstrip", "start"]
