# Version of docker-compose
version: '3.8'

# Containers we are going to run
services:
  # Our Phoenix container
  phoenix:
    # The build parameters for this container.
    build:
      # Here we define that it should build from the current directory
      context: .
    image: emmajhyde/groupstrip:latest
    container_name: groupstrip
    ports:
      # Mapping the port to make the Phoenix app accessible outside of the container
      - 4000:4000
    # set directory locations that will actually mount the host directories
    volumes:
#      - ./:/app/
#      - /app/assets/node_modules
#      - /app/deps
      - ./assets:/app/assets
      - /app/assets/node_modules
      - ./config:/app/config
      - ./lib:/app/lib
      - ./priv:/app/priv
      - ./test:/app/test
      #- /app/_build

  ### Removed POSTGRES configurations:
  # services: phoenix: environment:
  # Variables to connect to our Postgres server
  # PGUSER: postgres
  # PGPASSWORD: postgres
  # PGDATABASE: database_name
  # PGPORT: 5432
  # Hostname of our Postgres container
  # PGHOST: db
  # services: phoenix: depends_on:
  # The db container needs to be started before we start this container
  # - db
  # services: db:
  # We use the predefined Postgres image
  # image: postgres:9.6
  # environment:
  # Set user/password for Postgres
  # POSTGRES_USER: postgres
  # POSTGRES_PASSWORD: postgres
  # Set a path where Postgres should store the data
  # PGDATA: /var/lib/postgresql/data/pgdata
  # restart: always
  # volumes:
  #   - pgdata:/var/lib/postgresql/data
  # Define the volumes
  # volumes:
  # pgdata:
